{"version":3,"sources":["Option/Toggle.tsx","Option/TogglesSet.tsx","App.tsx","index.tsx","Option/Toggle.module.css"],"names":["Toggle","color","id","text","isSelected","handleChange","className","styles","div","switch","type","name","checked","onChange","slider","round","htmlFor","TogglesSet","SWITCHES","React","useState","switches","setSwitches","firstChecked","setfirstChecked","secondChecked","setsecondChecked","handleSwitch","e","target","newSwitches","parseInt","map","sw","index","App","getParam","param_name","URLParams","URLSearchParams","window","location","search","console","log","values","get","blue","green","red","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uPAsBeA,EAbc,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,GAAGC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,WAAWC,EAAkB,EAAlBA,aAEpD,OACI,qBAAKC,UAAWC,IAAOC,IAAvB,SACI,wBAAOF,UAAWC,IAAOE,OAAzB,UACI,uBAAOC,KAAK,WAAWC,KAAM,GAAGT,EAAIU,QAASR,EAAYS,SAAUR,IACnE,sBAAMC,UAAWC,IAAOO,OAAS,IAAIb,EAAO,IAAMM,IAAOQ,QACzD,uBAAOT,UAAWC,IAAOI,KAAMK,QAAQ,OAAvC,SAA+Cb,UCyBhDc,MAnCf,YAAoC,IAAfC,EAAc,EAAdA,SAAc,EACAC,IAAMC,SAAS,EAAC,GAAK,GAAK,IAD1B,mBACxBC,EADwB,KACfC,EADe,OAEQH,IAAMC,SAAS,GAFvB,mBAExBG,EAFwB,KAEXC,EAFW,OAGUL,IAAMC,SAAS,GAHzB,mBAGxBK,EAHwB,KAGVC,EAHU,KAKzBC,EAAe,SAACC,GACnB,GAAuB,GAApBA,EAAEC,OAAOjB,QAAgB,CACzB,IAAIkB,EAAW,YAAOT,GACtBS,EAAYC,SAASH,EAAEC,OAAOlB,QAAQ,EACnCoB,SAASH,EAAEC,OAAOlB,OAASY,GAAgBQ,SAASH,EAAEC,OAAOlB,OAASc,IACvEK,EAAYP,IAAe,EAC3BC,EAAgBC,GAChBC,EAAiBK,SAASH,EAAEC,OAAOlB,QAErCW,EAAYQ,OACV,CACF,IAAIA,EAAW,YAAOT,GAEtBS,EAAYC,SAASH,EAAEC,OAAOlB,QAAQ,EACtCW,EAAYQ,KAGlB,OACE,mCAEE,sBAAKxB,UAAU,MAAf,UACA,oBAAIA,UAAU,SAAd,+BACGe,EAASW,KAAI,SAACC,EAAIC,GACjB,OAAO,cAAC,EAAD,CAAoB/B,KAAMe,EAASgB,GAAO/B,KAAMF,MAAOiB,EAASgB,GAAOjC,MAAOC,GAAIgC,EAAO9B,WAAY6B,EAAI5B,aAAcsB,GAA1GO,YCEjBC,MA5Bf,WACE,IAAMC,EAAW,SAACC,GAChB,IAAMC,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAEtD,OADAC,QAAQC,IAAIN,EAAUO,UACfP,EAAUQ,IAAIT,IAEjBnB,EAAW,CACf,CACEf,KAAMiC,EAAS,OAAS,OACxBnC,MAAMM,IAAOwC,MAEf,CACE5C,KAAMiC,EAAS,OAAS,OACxBnC,MAAMM,IAAOyC,OAEf,CACE7C,KAAMiC,EAAS,OAAQ,QACvBnC,MAAMM,IAAO0C,MAIjB,OACE,mCACE,cAAC,EAAD,CAAY/B,SAAUA,OC1B5BgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,IAAM,oBAAoB,MAAQ,sBAAsB,IAAM,oBAAoB,KAAO,wB","file":"static/js/main.0d8f8220.chunk.js","sourcesContent":["import React, { FunctionComponent as FC } from \"react\"\r\nimport styles from './Toggle.module.css'\r\n\r\n\r\nconst Toggle : React.FC<{color: string\r\n                        id: number\r\n                        text:string\r\n                        isSelected: boolean\r\n                        handleChange: (e:any) => void                        \r\n                        }> = ({color,id,text,isSelected,handleChange}) => {    \r\n    \r\n    return(\r\n        <div className={styles.div}>            \r\n            <label className={styles.switch}>   \r\n                <input type=\"checkbox\" name={''+id} checked={isSelected} onChange={handleChange} />     \r\n                <span className={styles.slider + ' '+color+ ' ' + styles.round}></span> \r\n                <label className={styles.name} htmlFor=\"fast\">{text}</label>          \r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toggle","import React from 'react';\r\nimport logo from './logo.svg';\r\n\r\nimport Toggle from './Toggle';\r\nimport styles from './Toggle.module.css'\r\n\r\nfunction TogglesSet({SWITCHES}:any){\r\n    const [switches,setSwitches] = React.useState([true,true,false]);\r\n    const [firstChecked,setfirstChecked] = React.useState(0);\r\n    const [secondChecked,setsecondChecked] = React.useState(1);\r\n  \r\n    const handleSwitch = (e:any) => {    \r\n       if(e.target.checked == true){\r\n          let newSwitches = [...switches];\r\n          newSwitches[parseInt(e.target.name)]= true;\r\n          if(parseInt(e.target.name) != firstChecked || parseInt(e.target.name) != secondChecked){\r\n            newSwitches[firstChecked]= false;\r\n            setfirstChecked(secondChecked);\r\n            setsecondChecked(parseInt(e.target.name));          \r\n          }\r\n          setSwitches(newSwitches);\r\n       }else{\r\n          let newSwitches = [...switches];\r\n          //newSwitches[firstChecked]= false;\r\n          newSwitches[parseInt(e.target.name)]= false;\r\n          setSwitches(newSwitches);\r\n       }        \r\n    }\r\n    return (\r\n      <>\r\n        \r\n        <div className=\"App\">\r\n        <h2 className=\"center\"> Two out of three</h2>\r\n          {switches.map((sw, index) => {                    \r\n            return <Toggle key={index} text={SWITCHES[index].text} color={SWITCHES[index].color} id={index} isSelected={sw} handleChange={handleSwitch}/>;\r\n          })}      \r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default TogglesSet;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Toggle from './Option/Toggle';\nimport styles from './Option/Toggle.module.css'\nimport TogglesSet from './Option/TogglesSet';\n\nfunction App() {\n  const getParam = (param_name:string) => {\n    const URLParams = new URLSearchParams(window.location.search);\n    console.log(URLParams.values());\n    return URLParams.get(param_name);\n  }\n  const SWITCHES = [\n    {\n      text: getParam(\"t1\") || \"Fast\",\n      color:styles.blue\n    },\n    {\n      text: getParam(\"t2\") || \"Good\",\n      color:styles.green\n    },\n    {\n      text: getParam(\"t3\") ||\"Cheap\",\n      color:styles.red\n    }];  \n  \n    \n  return (\n    <>\n      <TogglesSet SWITCHES={SWITCHES}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"Toggle_switch__1uqyS\",\"slider\":\"Toggle_slider__1JnFI\",\"blue\":\"Toggle_blue__3DCyO\",\"green\":\"Toggle_green__3d9_b\",\"red\":\"Toggle_red__2hoZo\",\"round\":\"Toggle_round__1f1vS\",\"div\":\"Toggle_div__3sX1-\",\"name\":\"Toggle_name__GED2k\"};"],"sourceRoot":""}